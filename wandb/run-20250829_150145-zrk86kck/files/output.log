  0%|          | 0/5000 [00:00<?, ?it/s]Traceback (most recent call last):
  File "/mnt/petrelfs/fanyuyu/lingjie_tmp/WAPITI-Code-Base-master/train_logit_distill.py", line 915, in <module>
    main()
  File "/mnt/petrelfs/fanyuyu/lingjie_tmp/WAPITI-Code-Base-master/train_logit_distill.py", line 859, in main
    train_result = trainer.train(resume_from_checkpoint=checkpoint)
  File "/mnt/petrelfs/fanyuyu/miniconda3/envs/visual-stitching/lib/python3.10/site-packages/transformers/trainer.py", line 2245, in train
    return inner_training_loop(
  File "/mnt/petrelfs/fanyuyu/miniconda3/envs/visual-stitching/lib/python3.10/site-packages/transformers/trainer.py", line 2534, in _inner_training_loop
    self._load_rng_state(resume_from_checkpoint)
  File "/mnt/petrelfs/fanyuyu/miniconda3/envs/visual-stitching/lib/python3.10/site-packages/transformers/trainer.py", line 3130, in _load_rng_state
    checkpoint_rng_state = torch.load(rng_file, weights_only=True)
  File "/mnt/petrelfs/fanyuyu/miniconda3/envs/visual-stitching/lib/python3.10/site-packages/torch/serialization.py", line 1359, in load
    raise pickle.UnpicklingError(_get_wo_message(str(e))) from None
_pickle.UnpicklingError: Weights only load failed. This file can still be loaded, to do so you have two options, [1mdo those steps only if you trust the source of the checkpoint[0m.
	(1) Re-running `torch.load` with `weights_only` set to `False` will likely succeed, but it can result in arbitrary code execution. Do it only if you got the file from a trusted source.
	(2) Alternatively, to load with `weights_only=True` please check the recommended steps in the following error message.
	WeightsUnpickler error: Unsupported global: GLOBAL numpy.core.multiarray._reconstruct was not an allowed global by default. Please use `torch.serialization.add_safe_globals([_reconstruct])` to allowlist this global if you trust this class/function.

Check the documentation of torch.load to learn more about types accepted by default with weights_only https://pytorch.org/docs/stable/generated/torch.load.html.
[rank0]: Traceback (most recent call last):
[rank0]:   File "/mnt/petrelfs/fanyuyu/lingjie_tmp/WAPITI-Code-Base-master/train_logit_distill.py", line 915, in <module>
[rank0]:     main()
[rank0]:   File "/mnt/petrelfs/fanyuyu/lingjie_tmp/WAPITI-Code-Base-master/train_logit_distill.py", line 859, in main
[rank0]:     train_result = trainer.train(resume_from_checkpoint=checkpoint)
[rank0]:   File "/mnt/petrelfs/fanyuyu/miniconda3/envs/visual-stitching/lib/python3.10/site-packages/transformers/trainer.py", line 2245, in train
[rank0]:     return inner_training_loop(
[rank0]:   File "/mnt/petrelfs/fanyuyu/miniconda3/envs/visual-stitching/lib/python3.10/site-packages/transformers/trainer.py", line 2534, in _inner_training_loop
[rank0]:     self._load_rng_state(resume_from_checkpoint)
[rank0]:   File "/mnt/petrelfs/fanyuyu/miniconda3/envs/visual-stitching/lib/python3.10/site-packages/transformers/trainer.py", line 3130, in _load_rng_state
[rank0]:     checkpoint_rng_state = torch.load(rng_file, weights_only=True)
[rank0]:   File "/mnt/petrelfs/fanyuyu/miniconda3/envs/visual-stitching/lib/python3.10/site-packages/torch/serialization.py", line 1359, in load
[rank0]:     raise pickle.UnpicklingError(_get_wo_message(str(e))) from None
[rank0]: _pickle.UnpicklingError: Weights only load failed. This file can still be loaded, to do so you have two options, [1mdo those steps only if you trust the source of the checkpoint[0m.
[rank0]: 	(1) Re-running `torch.load` with `weights_only` set to `False` will likely succeed, but it can result in arbitrary code execution. Do it only if you got the file from a trusted source.
[rank0]: 	(2) Alternatively, to load with `weights_only=True` please check the recommended steps in the following error message.
[rank0]: 	WeightsUnpickler error: Unsupported global: GLOBAL numpy.core.multiarray._reconstruct was not an allowed global by default. Please use `torch.serialization.add_safe_globals([_reconstruct])` to allowlist this global if you trust this class/function.

[rank0]: Check the documentation of torch.load to learn more about types accepted by default with weights_only https://pytorch.org/docs/stable/generated/torch.load.html.
